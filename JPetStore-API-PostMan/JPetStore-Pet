{
	"info": {
		"_postman_id": "5be3539e-d3f7-4faf-877b-d54d6baa0d01",
		"name": "Pet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21164997"
	},
	"item": [
		{
			"name": "PetByStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Available Pets\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    availablePets=jsonData.length;\r",
							"});\r",
							"\r",
							"console.log(\"Total number of available pets are : \",availablePets);\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Server is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Transfer-Encoding is present\", function () {\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
							"});\r",
							"\r",
							"pm.test(\"If else\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    if(pm.expect(jsonData[2].name).to.eql(\"doggie\")) {\r",
							"        pet=jsonData[2].name;\r",
							"        console.log(\"Pet is \",pet);\r",
							"    } else {\r",
							"        console.log(\"Pet is other than doggie\")\r",
							"    }\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}/findByStatus?status=available",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "available"
						},
						{
							"key": "status",
							"value": "pending",
							"disabled": true
						},
						{
							"key": "status",
							"value": "sold",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AddANewPet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Id of the new pet added\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    newPetId=jsonData.id;\r",
							"});\r",
							"\r",
							"console.log(\"Id of the newly added pet : \",newPetId);\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateExistingPet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});\r",
							"\r",
							"pm.test(\"status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"available\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"jasmine\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PetById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    id=jsonData.id;\r",
							"    status=jsonData.status;\r",
							"});\r",
							"\r",
							"console.log(\"The pet id is : \",id,\" & status is : \",status);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}/5522",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"5522"
					]
				}
			},
			"response": []
		},
		{
			"name": "UploadImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"Connection\");\r",
							"});\r",
							"\r",
							"pm.test(\"Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    message=jsonData.message;\r",
							"});\r",
							"\r",
							"console.log(\"Message : \",message);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"imageVar\", \"9222968140497185000/uploadImage\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/NAVEENKUMAR/Downloads/pet.jpg"
						}
					]
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{imageVar}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{imageVar}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"x-srv-trace is present\", function () {\r",
							"    pm.response.to.have.header(\"x-srv-trace\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"var\", \"8\");\r",
							"pm.environment.set(\"mockURL\", \"https://4ae55b3f-e22f-4c01-8dfc-f45049b0573e.mock.pstmn.io\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{mockURL}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{mockURL}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": [
				{
					"name": "DeletePet",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/9",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"9"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n\"message\" : \"Pet deleted successfully.\"\r\n}"
				}
			]
		},
		{
			"name": "PostPet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"id\", \"\");\r",
							"pm.environment.set(\"status\", \"\");\r",
							"pm.environment.set(\"name\", \"\");\r",
							"pm.environment.set(\"category\", \"\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"{{id}}\",\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"{{category}}\"\r\n  },\r\n  \"name\": \"{{name}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"{{category}}\"\r\n    }\r\n  ],\r\n  \"status\": \"{{status}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet\n",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet\n"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.globals.set(\"url\", \"https://petstore.swagger.io\");",
					"",
					"pm.environment.set(\"resourcePath\", \"v2/pet\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,404,415]);",
					"});"
				]
			}
		}
	]
}