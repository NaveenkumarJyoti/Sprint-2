{
	"info": {
		"_postman_id": "1ec50b61-a25f-4a95-acfb-443db2ec4a06",
		"name": "User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21164997"
	},
	"item": [
		{
			"name": "GetUserByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Transfer-Encoding is present\", function () {\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
							"});\r",
							"\r",
							"pm.test(\"User firstname & lastname\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    firstName=jsonData.firstName;\r",
							"    lastName=jsonData.lastName;\r",
							"});\r",
							"\r",
							"console.log(\"Firstname is : \",firstName,\" lastname is : \",lastName);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{resourcePath}}/abc",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"abc"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"var\", \"abc\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"abc\",\r\n  \"firstName\": \"Vlahovic\",\r\n  \"lastName\": \"Chiesa\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"mockURL\", \"https://6479aa6e-7e37-4ee2-8dc7-16f6f37d6ab6.mock.pstmn.io\");\r",
							"\r",
							"pm.environment.set(\"var\", \"abc\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{mockURL}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{mockURL}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": [
				{
					"name": "DeleteUser",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/abc",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"abc"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n   \"message\" : \"User deleted successfully.\"\r\n}"
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"X-Rate-Limit is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Rate-Limit\");\r",
							"});\r",
							"\r",
							"pm.test(\"X-Expires-After is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Expires-After\");\r",
							"});\r",
							"\r",
							"pm.test(\"Session\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    message=jsonData.message;\r",
							"});\r",
							"console.log(message);\r",
							"\r",
							"// pm.test(\"Your test name\", function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect((jsonData.message).matches(\"[A-Z|a-z|0-9\\W]+\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"var\", \"login\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// {\r\n//     \"username\" : {{username}},\r\n//     \"password\" : {{password}}\r\n// }\r\n\r\n{\r\n    \"username\" : \"abc\",\r\n    \"password\" : \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					],
					"query": [
						{
							"key": "username",
							"value": "abc",
							"disabled": true
						},
						{
							"key": "password",
							"value": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    message=jsonData.message;\r",
							"});\r",
							"\r",
							"console.log(\"user logged out : \",message);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"var\", \"logout\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Body matches Authorization\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Sample OAuth Provider\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Cache-Control is present\", function () {\r",
							"    pm.response.to.have.header(\"Cache-Control\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"var\", \"oauth/login.jsp\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "abc123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "test",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{var}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// pm.environment.set(\"id\", \"\");\r",
							"// pm.environment.set(\"username\", \"\");\r",
							"// pm.environment.set(\"firstName\", \"\");\r",
							"// pm.environment.set(\"lastName\", \"\");\r",
							"// pm.environment.set(\"email\", \"\");\r",
							"// pm.environment.set(\"password\", \"\");\r",
							"// pm.environment.set(\"phone\", \"\");\r",
							"// pm.environment.set(\"userStatus\", \"\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// [\r\n//   {\r\n//     \"id\": {{id}},\r\n//     \"username\": {{username}},\r\n//     \"firstName\": {{firstName}},\r\n//     \"lastName\": {{lastName}},\r\n//     \"email\": {{email}},\r\n//     \"password\": {{password}},\r\n//     \"phone\": {{phone}},\r\n//     \"userStatus\": {{userStatus}}\r\n//   }\r\n// ]\r\n\r\n{\r\n  \"id\": 0,\r\n  \"username\": \"string\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.globals.set(\"url\", \"https://petstore.swagger.io\");",
					"",
					"pm.environment.set(\"resourcePath\", \"v2/user\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,400,404]);",
					"});"
				]
			}
		}
	]
}