{
	"info": {
		"_postman_id": "24d0d215-4d15-4ba2-b09f-cb71d01bcbd7",
		"name": "NegativeFlow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21164997"
	},
	"item": [
		{
			"name": "PetById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"type & message validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");\r",
							"    pm.expect(jsonData.message).to.eql(\"Pet not found\");\r",
							"    message=jsonData.message;\r",
							"});\r",
							"console.log(\"error message : \",message);\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Transfer-Encoding is present\", function () {\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"resourcePath\", \"v2/pet\");\r",
							"pm.environment.set(\"var\", \"12548788\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPurchaseByOrderId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"error & message validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");\r",
							"    pm.expect(jsonData.message).to.eql(\"Order not found\");\r",
							"    message=jsonData.message;\r",
							"});\r",
							"console.log(\"Error message is : \",message);\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"pm.test(\"Transfer-Encoding is present\", function () {\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"resourcePath\", \"v2/store/order\");\r",
							"pm.environment.set(\"var\", \"451\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserByName",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"resourcePath\", \"v2/user\");\r",
							"\r",
							"pm.environment.set(\"var\", \"gisele\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Server is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");\r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
							"    message=jsonData.message;\r",
							"});\r",
							"console.log(\"Error message : \",message)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{resourcePath}}/{{var}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{resourcePath}}",
						"{{var}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorization",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "testing",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.globals.set(\"url\", \"https://petstore.swagger.io\");",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 404\", function () {",
					"    pm.response.to.have.status(404);",
					"});",
					"pm.test(\"Response time is less than 800ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(800);",
					"});"
				]
			}
		}
	]
}